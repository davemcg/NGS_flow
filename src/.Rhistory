?select()
library(tidyverse)
manta <- read_tsv("Z:/NextSeqAnalysis/pipelineValid/manta/manta.1197.annotated.tsv", col_names = TRUE, na = c("NA", "", "None", "."), col_types = cols(.default = col_character())) %>%
filter(FILTER == 'PASS') %>%
filter( is.na(Gene_name) | Annotation_mode == 'split' & !is.na(Gene_name) ) %>%
mutate(ACMG_class = sub("full=", "", ACMG_class)) %>%
type_convert() %>%
mutate(ACMG_class = case_when(SV_type == "DEL" & !is.na(B_loss_source) ~ ACMG_class - 2,
SV_type == "DUP" & !is.na(B_gain_source) ~ ACMG_class - 1,
SV_type == "BND" & ( ( SV_chrom == "X" & between(SV_start, 140420272, 140421278) | ( grepl("chrX", ALT) & between(as.numeric(gsub("\\D", "", ALT)), 140420272, 140421278) ) )) ~ 5,
TRUE ~ ACMG_class )) %>%
filter(ACMG_class > 1 | is.na(ACMG_class), is.na(SV_length) | abs(SV_length) < 1000000) %>% #added is.na(ACMG_class) 11/17/2021, may need to remove this part if too many lines in the results
separate(Location, c('temp_location1', 'temp_location2'), sep = "-", remove = FALSE, convert = FALSE) %>%
filter(!(grepl("intron", Location) & temp_location1 == temp_location2)) %>%
select(-starts_with('temp_')) %>%
rename(ref_gene = "Gene_name")
View(manta)
library(readxl)
args <- c("Z:/resources/omim/omim_all_gene.bed", "Z:/resources/OGLpanelGeneDxORcandidate.xlsx")
omim <- read_tsv(args[1], col_names = TRUE, na = c("NA", "", "None", "."), col_types = cols(.default = col_character())) %>%
type_convert()
omim <- read_tsv(args[1], col_names = TRUE, na = c("NA", "", "None", "."), col_types = cols(.default = col_character())) %>%
type_convert() %>%
select(`# Chromosome`:`Genomic Position End`, `Gene Symbols`, `Approved Gene Symbol`, `Ensembl Gene ID`, Phenotypes) %>%
filter(!is.na(`Ensembl Gene ID`))
View(omim)
omim <- read_tsv(args[1], col_names = TRUE, na = c("NA", "", "None", "."), col_types = cols(.default = col_character())) %>%
type_convert() %>%
select(`# Chromosome`:`Genomic Position End`, `Gene Symbols`, `Approved Gene Symbol`, `Ensembl Gene ID`, Phenotypes) %>%
filter(!is.na(`Ensembl Gene ID`)) %>%
mutate(Inheritance = case_when( grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLD|XLR",
grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & !grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLR",
!grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLD",
grepl("X-linked", Phenotypes, ignore.case = TRUE) & !grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & !grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XL",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|AR|DG",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|AR",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|DG",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AR|DG",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AR",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "DG",
))
filter(OMIM, `Gene Symbols` == "AR")
filter(omim, `Gene Symbols` == "AR")
ar <- filter(omim, `Gene Symbols` == "AR")
ar <- filter(omim, `Approved Gene Symbol` == "AR")
View(ar)
View(omim)
pheno <- filter(omim, !is.na(Phenotypes))
pheno <- filter(omim, !is.na(Phenotypes), is.na(Inheritance))
View(pheno)
omim <- read_tsv(args[1], col_names = TRUE, na = c("NA", "", "None", "."), col_types = cols(.default = col_character())) %>%
type_convert() %>%
select(`# Chromosome`:`Genomic Position End`, `Gene Symbols`, `Approved Gene Symbol`, `Ensembl Gene ID`, Phenotypes) %>%
filter(!is.na(`Ensembl Gene ID`)) %>%
mutate(Inheritance = case_when( grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLD|XLR",
grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & !grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLR",
!grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLD",
grepl("X-linked", Phenotypes, ignore.case = TRUE) & !grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & !grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XL",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|AR|DG",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|AR",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|DG",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AR|DG",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AR",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "DG",
grepl("Y-linked", Phenotypes, ignore.case = TRUE) ~ "YL",
TRUE ~ "" ))
pheno <- filter(omim, !is.na(Phenotypes), is.na(Inheritance))
ar <- filter(omim, `Approved Gene Symbol` == "AR")
View(ar)
eyeGene_inheritance <- read_xlsx(args[2], sheet = "analysis", na = c("NA", "", "None", ".")) %>% select(gene, Inheritance) %>% filter(!is.na(Inheritance))
View(eyeGene_inheritance)
omim_no_inheritance <- filter(omim, Inheritance == "")
omim_no_inheritance <- filter(omim, Inheritance == "") %>% select(-Inheritance)
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c(`Approved Gene Symbol`, "gene"))
View(omim_no_inheritance)
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c("`Approved Gene Symbol`", "gene"))
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c("`Approved Gene Symbol`" = "gene"))
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c(`Approved Gene Symbol` = "gene"))
View(omim_no_inheritance)
omim_no_inheritance <- filter(omim, Inheritance == "") %>% select(-Inheritance)
eyeGene_inheritance <- read_xlsx(args[2], sheet = "analysis", na = c("NA", "", "None", ".")) %>% select(gene, Inheritance) %>% filter(!is.na(Inheritance))
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c(`Approved Gene Symbol` = "gene"))
View(omim_no_inheritance)
omim_no_inheritance <- filter(omim, is.na(Inheritance)) %>% select(-Inheritance)
omim_inheritance <- filter(omim, !is.na(Inheritance))
eyeGene_inheritance <- read_xlsx(args[2], sheet = "analysis", na = c("NA", "", "None", ".")) %>% select(gene, Inheritance) %>% filter(!is.na(Inheritance))
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c(`Approved Gene Symbol` = "gene"))
eyeGene_inheritance <- read_xlsx(args[2], sheet = "analysis", na = c("NA", "", "None", ".")) %>% select(gene, Inheritance, Phenotypes) %>% filter(!is.na(Inheritance))
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c(`Approved Gene Symbol` = "gene"))
omim_no_inheritance <- filter(omim, is.na(Inheritance)) %>% select(-Inheritance)
omim_inheritance <- filter(omim, !is.na(Inheritance))
eyeGene_inheritance <- read_xlsx(args[2], sheet = "analysis", na = c("NA", "", "None", ".")) %>% select(gene, Inheritance, Phenotypes) %>% filter(!is.na(Inheritance))
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c(`Approved Gene Symbol` = "gene"))
omim_no_inheritance <- filter(omim, is.na(Inheritance)) %>% select(-Inheritance)
omim_inheritance <- filter(omim, !is.na(Inheritance))
eyeGene_inheritance <- read_xlsx(args[2], sheet = "analysis", na = c("NA", "", "None", ".")) %>% select(gene, Inheritance, Phenotypes) %>% filter(!is.na(Inheritance))
omim <- read_tsv(args[1], col_names = TRUE, na = c("NA", "", "None", "."), col_types = cols(.default = col_character())) %>%
type_convert() %>%
select(`# Chromosome`:`Genomic Position End`, `Gene Symbols`, `Approved Gene Symbol`, `Ensembl Gene ID`, Phenotypes) %>%
filter(!is.na(`Ensembl Gene ID`)) %>%
mutate(Inheritance = case_when( grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLD|XLR",
grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & !grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLR",
!grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLD",
grepl("X-linked", Phenotypes, ignore.case = TRUE) & !grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & !grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XL",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|AR|DG",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|AR",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|DG",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AR|DG",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AR",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "DG",
grepl("Y-linked", Phenotypes, ignore.case = TRUE) ~ "YL",
TRUE ~ NA ))
omim_no_inheritance <- filter(omim, is.na(Inheritance)) %>% select(-Inheritance)
omim_inheritance <- filter(omim, !is.na(Inheritance))
eyeGene_inheritance <- read_xlsx(args[2], sheet = "analysis", na = c("NA", "", "None", ".")) %>% select(gene, Inheritance, Phenotypes) %>% filter(!is.na(Inheritance))
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c(`Approved Gene Symbol` = "gene"))
omim <- read_tsv(args[1], col_names = TRUE, na = c("NA", "", "None", "."), col_types = cols(.default = col_character())) %>%
type_convert() %>%
select(`# Chromosome`:`Genomic Position End`, `Gene Symbols`, `Approved Gene Symbol`, `Ensembl Gene ID`, Phenotypes) %>%
filter(!is.na(`Ensembl Gene ID`)) %>%
mutate(Inheritance = case_when( grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLD|XLR",
grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & !grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLR",
!grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLD",
grepl("X-linked", Phenotypes, ignore.case = TRUE) & !grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & !grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XL",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|AR|DG",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|AR",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|DG",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AR|DG",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AR",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "DG",
grepl("Y-linked", Phenotypes, ignore.case = TRUE) ~ "YL" ))
omim_no_inheritance <- filter(omim, is.na(Inheritance)) %>% select(-Inheritance)
omim_inheritance <- filter(omim, !is.na(Inheritance))
eyeGene_inheritance <- read_xlsx(args[2], sheet = "analysis", na = c("NA", "", "None", ".")) %>% select(gene, Inheritance, Phenotypes) %>% filter(!is.na(Inheritance))
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c(`Approved Gene Symbol` = "gene"))
View(omim_no_inheritance)
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c(`Approved Gene Symbol` = "gene")) %>%
mutate(Phenotypes = ifelse(is.na(Phenotypes.y), Phenotypes.x, Phenotypes.y)) %>%
filter(!is.na(Phenotypes) | !is.na(Inheritance)) %>%
select(`# Chromosome`:`Ensembl Gene ID`, Phenotypes, Inheritance)
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c(`Approved Gene Symbol` = "gene")) %>%
mutate(Phenotypes = ifelse(is.na(Phenotypes.y), Phenotypes.x, Phenotypes.y))
View(omim_no_inheritance)
omim_no_inheritance <- filter(omim, is.na(Inheritance)) %>% select(-Inheritance)
omim_inheritance <- filter(omim, !is.na(Inheritance))
eyeGene_inheritance <- read_xlsx(args[2], sheet = "analysis", na = c("NA", "", "None", ".")) %>% select(gene, Inheritance, Phenotypes) %>% filter(!is.na(Inheritance))
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c(`Approved Gene Symbol` = "gene")) %>%
mutate(Phenotypes = ifelse(is.na(Phenotypes.y), Phenotypes.x, Phenotypes.y)) %>%
filter(!is.na(Phenotypes) | !is.na(Inheritance)) %>%
select(`# Chromosome`:`Ensembl Gene ID`, Phenotypes, Inheritance)
View(omim_no_inheritance)
omim_output <- rbind(omim_inheritance, omim_no_inheritance) %>%
mutate(`# Chromosome` = factor(`# Chromosome`, levels=c('chr1','chr2','chr3','chr4','chr5','chr6','chr7','chr8','chr9','chr10','chr11','chr12','chr13','chr14','chr15','chr16','chr17','chr18','chr19','chr20','chr21','chr22','chrX','chrY'))) %>%
arrange(`# Chromosome`, `Genomic Position Start`)
View(omim_output)
omim_output <- rbind(omim_inheritance, omim_no_inheritance) %>%
mutate(`# Chromosome` = factor(`# Chromosome`, levels=c('chr1','chr2','chr3','chr4','chr5','chr6','chr7','chr8','chr9','chr10','chr11','chr12','chr13','chr14','chr15','chr16','chr17','chr18','chr19','chr20','chr21','chr22','chrX','chrY'))) %>%
arrange(`# Chromosome`, `Genomic Position Start`) %>%
replace_na(Inheritance, "") %>%
mutate(Phenotypes = gsub("X-linked recessive", "XLR", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("X-linked recessive", "XLR", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("X-linked recessive", "XLR", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("X-linked recessive", "XLR", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("X-linked recessive", "XLR", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("X-linked recessive", "XLR", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("X-linked recessive", "XLR", Phenotypes, ignore.case = TRUE)) %>%
write_tsv(omim_output, file = args[3])
omim <- read_tsv(args[1], col_names = TRUE, na = c("NA", "", "None", "."), col_types = cols(.default = col_character())) %>%
type_convert() %>%
select(`# Chromosome`:`Genomic Position End`, `Gene Symbols`, `Approved Gene Symbol`, `Ensembl Gene ID`, Phenotypes) %>%
filter(!is.na(`Ensembl Gene ID`)) %>%
mutate(Phenotypes = ifelse(`Approved Gene Symbol` == "AR", sub("Autosomal dominant", "XL", Phenotypes), Phenotypes)) %>%
mutate(Inheritance = case_when( grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLD|XLR",
grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & !grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLR",
!grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XLD",
grepl("X-linked", Phenotypes, ignore.case = TRUE) & !grepl("X-linked recessive", Phenotypes, ignore.case = TRUE) & !grepl("X-linked dominant", Phenotypes, ignore.case = TRUE) ~ "XL",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|AR|DG",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|AR",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD|DG",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AR|DG",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AD",
grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & !grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "AR",
!grepl("Autosomal recessive", Phenotypes, ignore.case = TRUE) & !grepl("Autosomal dominant", Phenotypes, ignore.case = TRUE) & grepl("digenic", Phenotypes, ignore.case = TRUE)  ~ "DG",
grepl("Y-linked", Phenotypes, ignore.case = TRUE) ~ "YL" ))
omim_no_inheritance <- filter(omim, is.na(Inheritance)) %>% select(-Inheritance)
omim_inheritance <- filter(omim, !is.na(Inheritance))
eyeGene_inheritance <- read_xlsx(args[2], sheet = "analysis", na = c("NA", "", "None", ".")) %>% select(gene, Inheritance, Phenotypes) %>% filter(!is.na(Inheritance))
omim_no_inheritance <- left_join(omim_no_inheritance, eyeGene_inheritance, by = c(`Approved Gene Symbol` = "gene")) %>%
mutate(Phenotypes = ifelse(is.na(Phenotypes.y), Phenotypes.x, Phenotypes.y)) %>%
filter(!is.na(Phenotypes) | !is.na(Inheritance)) %>%
select(`# Chromosome`:`Ensembl Gene ID`, Phenotypes, Inheritance)
omim_output <- rbind(omim_inheritance, omim_no_inheritance) %>%
mutate(`# Chromosome` = factor(`# Chromosome`, levels=c('chr1','chr2','chr3','chr4','chr5','chr6','chr7','chr8','chr9','chr10','chr11','chr12','chr13','chr14','chr15','chr16','chr17','chr18','chr19','chr20','chr21','chr22','chrX','chrY'))) %>%
arrange(`# Chromosome`, `Genomic Position Start`) %>%
replace_na(Inheritance, "") %>%
mutate(Phenotypes = gsub("X-linked recessive", "XLR", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("X-linked dominant", "XLD", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("Autosomal recessive", "AR", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("Autosomal dominant", "AD", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("X-linked", "XL", Phenotypes, ignore.case = TRUE))
omim_output <- rbind(omim_inheritance, omim_no_inheritance) %>%
mutate(`# Chromosome` = factor(`# Chromosome`, levels=c('chr1','chr2','chr3','chr4','chr5','chr6','chr7','chr8','chr9','chr10','chr11','chr12','chr13','chr14','chr15','chr16','chr17','chr18','chr19','chr20','chr21','chr22','chrX','chrY'))) %>%
arrange(`# Chromosome`, `Genomic Position Start`) %>%
replace_na(list(Inheritance = "")) %>%
mutate(Phenotypes = gsub("X-linked recessive", "XLR", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("X-linked dominant", "XLD", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("Autosomal recessive", "AR", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("Autosomal dominant", "AD", Phenotypes, ignore.case = TRUE)) %>%
mutate(Phenotypes = gsub("X-linked", "XL", Phenotypes, ignore.case = TRUE))
View(ar)
View(omim_output)
hg19 <-  read_xlsx("Z:/resources/OGLvariantsClassification.xlsx", sheet = "OGLvariants", na =c("", ".", "NA", " ")) %>%
filter(!is.na(chr_variant_id)) %>%
select(chr_variant_id, InterVar_evidence:splice_prediction)
validator <- read_tsv("Z:/resources/OGLvariantValidator.txt", col_names = TRUE, na = c("NA", "", "None", "."), col_types = cols(.default = col_character())) %>% type_convert()
hg38 <- left_join(validator, hg19, by = c("Input" = "chr_variant_id")) %>%
separate(HGVS_transcript, c("transcript", "hgvsc"), sep = ":" ) %>%
filter(unlist(Map(function(x, y) grepl(x, y), hgvsc, annovarAnnotation)))
hg38 <- left_join(validator, hg19, by = c("Input" = "chr_variant_id")) %>%
separate(HGVS_transcript, c("transcript", "hgvsc"), sep = ":" )
View(hg38)
hg38 <- left_join(validator, hg19, by = c("Input" = "chr_variant_id")) %>%
separate(HGVS_transcript, c("transcript", "hgvsc"), sep = ":" ) %>%
filter(unlist(Map(function(x, y) grepl(x, y), hgvsc, annovarAnnotation)))
hg38 <- left_join(validator, hg19, by = c("Input" = "chr_variant_id")) %>%
separate(HGVS_transcript, c("transcript", "hgvsc"), sep = ":", convert = TRUE ) %>%
filter(unlist(Map(function(x, y) grepl(x, y), hgvsc, annovarAnnotation)))
hg38 <- left_join(validator, hg19, by = c("Input" = "chr_variant_id")) %>%
separate(HGVS_transcript, c("transcript", "hgvsc"), sep = ":", convert = TRUE ) %>%
filter(unlist(Map(function(x, y) grepl(x, y), hgvsc, annovarAnnotation)))
validator <- read_tsv("Z:/resources/OGLvariantValidator.txt", col_names = TRUE, na = c("NA", "", "None", "."), col_types = cols(.default = col_character())) %>%
type_convert() %>% distinct(Input, .keep_all = TRUE)
hg38 <- left_join(validator, hg19, by = c("Input" = "chr_variant_id")) %>%
separate(HGVS_transcript, c("transcript", "hgvsc"), sep = ":", convert = TRUE )
hg38 <- left_join(hg19, validator, by = c("chr_variant_id" = "Input")) %>%
unite("hg38_variant_id", GRCh38_CHR, GRCh38_POS, GRCh38_REF, GRCh38_ALT, sep = "-", remove = FALSE ) %>%
rename(hg19_variant_id = chr_variant_id) %>%
select(hg38_variant_id, GRCh38_CHR, GRCh38_POS, GRCh38_REF, GRCh38_ALT, hg19_variant_id, InterVar_evidence:splice_prediction)
hg38 <- left_join(hg19, validator, by = c("chr_variant_id" = "Input")) %>% mutate(GRCh38_CHR = sub("^", "chr", GRCh38_CHR)) %>%
unite("hg38_variant_id", GRCh38_CHR, GRCh38_POS, GRCh38_REF, GRCh38_ALT, sep = "-", remove = FALSE ) %>%
rename(hg19_variant_id = chr_variant_id) %>%
select(hg38_variant_id, GRCh38_CHR, GRCh38_POS, GRCh38_REF, GRCh38_ALT, hg19_variant_id, InterVar_evidence:splice_prediction)
View(hg38)
openxlsx::write.xlsx(list("OGLvariants" = hg38), file = "Z:/resources/OGLvariantsClassification.xlsx", firstRow = TRUE, firstCol = TRUE)
